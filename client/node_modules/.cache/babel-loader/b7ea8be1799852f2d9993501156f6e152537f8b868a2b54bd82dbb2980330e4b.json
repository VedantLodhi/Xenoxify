{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xenoxify\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TrendingUp, TrendingDown, Users, ShoppingBag, DollarSign, Package, Eye, MoreVertical, Calendar, ArrowUpRight, ArrowDownRight, Activity, Target, Zap, Star } from 'lucide-react';\n\n// API configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nconst Dashboard = () => {\n  _s();\n  // State with proper initial values\n  const [summaryData, setSummaryData] = useState({\n    totalOrders: 0,\n    totalRevenue: 0,\n    totalCustomers: 0,\n    averageOrderValue: 0,\n    growthRate: 0,\n    conversionRate: 0\n  });\n  const [topCustomers, setTopCustomers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [chartData, setChartData] = useState({\n    salesOverTime: [],\n    orderStatusDistribution: [],\n    paymentStatus: [],\n    topCustomersByRevenue: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeRange, setTimeRange] = useState('30d');\n\n  // Generate realistic mock data\n  const generateMockData = () => {\n    // Generate sales over time data\n    const salesOverTime = [];\n    const days = timeRange === '7d' ? 7 : timeRange === '30d' ? 30 : 90;\n    for (let i = days - 1; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      salesOverTime.push({\n        date: date.toISOString().split('T')[0],\n        sales: Math.floor(Math.random() * 300) + 150\n      });\n    }\n\n    // Generate order status distribution\n    const orderStatusDistribution = [{\n      status: 'delivered',\n      count: 45,\n      color: '#10B981'\n    }, {\n      status: 'shipped',\n      count: 32,\n      color: '#3B82F6'\n    }, {\n      status: 'pending',\n      count: 28,\n      color: '#F59E0B'\n    }, {\n      status: 'processing',\n      count: 18,\n      color: '#8B5CF6'\n    }, {\n      status: 'cancelled',\n      count: 12,\n      color: '#EF4444'\n    }, {\n      status: 'refunded',\n      count: 8,\n      color: '#F97316'\n    }];\n\n    // Generate payment status data\n    const paymentStatus = [{\n      status: 'paid',\n      count: 120,\n      color: '#10B981'\n    }, {\n      status: 'pending',\n      count: 25,\n      color: '#F59E0B'\n    }, {\n      status: 'failed',\n      count: 8,\n      color: '#EF4444'\n    }, {\n      status: 'refunded',\n      count: 5,\n      color: '#6B7280'\n    }];\n\n    // Generate top customers data\n    const topCustomersData = [{\n      name: 'John Doe',\n      revenue: 12500,\n      orders: 25,\n      avatar: 'JD'\n    }, {\n      name: 'Jane Smith',\n      revenue: 9800,\n      orders: 20,\n      avatar: 'JS'\n    }, {\n      name: 'Mike Johnson',\n      revenue: 8900,\n      orders: 18,\n      avatar: 'MJ'\n    }, {\n      name: 'Sarah Wilson',\n      revenue: 7500,\n      orders: 15,\n      avatar: 'SW'\n    }, {\n      name: 'Tom Brown',\n      revenue: 6200,\n      orders: 12,\n      avatar: 'TB'\n    }];\n\n    // Generate recent orders\n    const recentOrders = [{\n      id: 'ORD-001',\n      customer: 'John Doe',\n      amount: 250,\n      status: 'delivered',\n      date: '2025-09-10'\n    }, {\n      id: 'ORD-002',\n      customer: 'Jane Smith',\n      amount: 180,\n      status: 'shipped',\n      date: '2025-09-09'\n    }, {\n      id: 'ORD-003',\n      customer: 'Mike Johnson',\n      amount: 320,\n      status: 'pending',\n      date: '2025-09-08'\n    }, {\n      id: 'ORD-004',\n      customer: 'Sarah Wilson',\n      amount: 420,\n      status: 'delivered',\n      date: '2025-09-07'\n    }, {\n      id: 'ORD-005',\n      customer: 'Tom Brown',\n      amount: 150,\n      status: 'processing',\n      date: '2025-09-06'\n    }];\n    return {\n      summaryData: {\n        totalOrders: 150,\n        totalRevenue: 45000,\n        totalCustomers: 89,\n        averageOrderValue: 300,\n        growthRate: 12.5,\n        conversionRate: 3.2\n      },\n      topCustomers: topCustomersData,\n      orders: recentOrders,\n      chartData: {\n        salesOverTime,\n        orderStatusDistribution,\n        paymentStatus,\n        topCustomersByRevenue: topCustomersData\n      }\n    };\n  };\n\n  // Fetch dashboard data\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // For now, use mock data. In production, replace with actual API calls\n      const mockData = generateMockData();\n      setSummaryData(mockData.summaryData);\n      setTopCustomers(mockData.topCustomers);\n      setOrders(mockData.orders);\n      setChartData(mockData.chartData);\n      console.log('Dashboard data loaded successfully');\n    } catch (error) {\n      console.error('Dashboard data fetch error:', error);\n      setError('Failed to load dashboard data. Please check if the server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDashboardData();\n  }, [timeRange]);\n\n  // Helper functions\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n  const getStatusColor = status => {\n    const colors = {\n      delivered: 'bg-green-100 text-green-800 border-green-200',\n      shipped: 'bg-blue-100 text-blue-800 border-blue-200',\n      pending: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      processing: 'bg-purple-100 text-purple-800 border-purple-200',\n      cancelled: 'bg-red-100 text-red-800 border-red-200',\n      refunded: 'bg-orange-100 text-orange-800 border-orange-200'\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n  const getCustomerInitials = name => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading Dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fetching your data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchDashboardData,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderCharts, {\n      orders: orders,\n      topCustomers: topCustomers,\n      summaryData: summaryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summaryData.totalOrders || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", summaryData.totalRevenue || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summaryData.totalCustomers || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Order Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", summaryData.averageOrderValue || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), topCustomers && topCustomers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [customer.orders, \" orders\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", customer.revenue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, customer.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No customer data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-orders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), orders && orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.customer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.status || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, order.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        background: '#f5f5f5'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API Base URL: \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Summary Data: \", JSON.stringify(summaryData)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Top Customers Count: \", (topCustomers === null || topCustomers === void 0 ? void 0 : topCustomers.length) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Orders Count: \", (orders === null || orders === void 0 ? void 0 : orders.length) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"xqUFyHkkZlQ9/lUs6J4yQt0LO3k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","TrendingUp","TrendingDown","Users","ShoppingBag","DollarSign","Package","Eye","MoreVertical","Calendar","ArrowUpRight","ArrowDownRight","Activity","Target","Zap","Star","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","Dashboard","_s","summaryData","setSummaryData","totalOrders","totalRevenue","totalCustomers","averageOrderValue","growthRate","conversionRate","topCustomers","setTopCustomers","orders","setOrders","chartData","setChartData","salesOverTime","orderStatusDistribution","paymentStatus","topCustomersByRevenue","loading","setLoading","error","setError","timeRange","setTimeRange","generateMockData","days","i","date","Date","setDate","getDate","push","toISOString","split","sales","Math","floor","random","status","count","color","topCustomersData","name","revenue","avatar","recentOrders","id","customer","amount","fetchDashboardData","mockData","console","log","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","getStatusColor","colors","delivered","shipped","pending","processing","cancelled","refunded","getCustomerInitials","map","n","join","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","OrderCharts","length","index","order","marginTop","padding","background","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/Xenoxify/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { \r\n  TrendingUp, \r\n  TrendingDown, \r\n  Users, \r\n  ShoppingBag, \r\n  DollarSign, \r\n  Package, \r\n  Eye, \r\n  MoreVertical,\r\n  Calendar,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Activity,\r\n  Target,\r\n  Zap,\r\n  Star\r\n} from 'lucide-react';\r\n\r\n// API configuration\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n\r\nconst Dashboard = () => {\r\n  // State with proper initial values\r\n  const [summaryData, setSummaryData] = useState({\r\n    totalOrders: 0,\r\n    totalRevenue: 0,\r\n    totalCustomers: 0,\r\n    averageOrderValue: 0,\r\n    growthRate: 0,\r\n    conversionRate: 0\r\n  });\r\n  const [topCustomers, setTopCustomers] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [chartData, setChartData] = useState({\r\n    salesOverTime: [],\r\n    orderStatusDistribution: [],\r\n    paymentStatus: [],\r\n    topCustomersByRevenue: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeRange, setTimeRange] = useState('30d');\r\n\r\n  // Generate realistic mock data\r\n  const generateMockData = () => {\r\n    // Generate sales over time data\r\n    const salesOverTime = [];\r\n    const days = timeRange === '7d' ? 7 : timeRange === '30d' ? 30 : 90;\r\n    for (let i = days - 1; i >= 0; i--) {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n      salesOverTime.push({\r\n        date: date.toISOString().split('T')[0],\r\n        sales: Math.floor(Math.random() * 300) + 150\r\n      });\r\n    }\r\n\r\n    // Generate order status distribution\r\n    const orderStatusDistribution = [\r\n      { status: 'delivered', count: 45, color: '#10B981' },\r\n      { status: 'shipped', count: 32, color: '#3B82F6' },\r\n      { status: 'pending', count: 28, color: '#F59E0B' },\r\n      { status: 'processing', count: 18, color: '#8B5CF6' },\r\n      { status: 'cancelled', count: 12, color: '#EF4444' },\r\n      { status: 'refunded', count: 8, color: '#F97316' }\r\n    ];\r\n\r\n    // Generate payment status data\r\n    const paymentStatus = [\r\n      { status: 'paid', count: 120, color: '#10B981' },\r\n      { status: 'pending', count: 25, color: '#F59E0B' },\r\n      { status: 'failed', count: 8, color: '#EF4444' },\r\n      { status: 'refunded', count: 5, color: '#6B7280' }\r\n    ];\r\n\r\n    // Generate top customers data\r\n    const topCustomersData = [\r\n      { name: 'John Doe', revenue: 12500, orders: 25, avatar: 'JD' },\r\n      { name: 'Jane Smith', revenue: 9800, orders: 20, avatar: 'JS' },\r\n      { name: 'Mike Johnson', revenue: 8900, orders: 18, avatar: 'MJ' },\r\n      { name: 'Sarah Wilson', revenue: 7500, orders: 15, avatar: 'SW' },\r\n      { name: 'Tom Brown', revenue: 6200, orders: 12, avatar: 'TB' }\r\n    ];\r\n\r\n    // Generate recent orders\r\n    const recentOrders = [\r\n      { id: 'ORD-001', customer: 'John Doe', amount: 250, status: 'delivered', date: '2025-09-10' },\r\n      { id: 'ORD-002', customer: 'Jane Smith', amount: 180, status: 'shipped', date: '2025-09-09' },\r\n      { id: 'ORD-003', customer: 'Mike Johnson', amount: 320, status: 'pending', date: '2025-09-08' },\r\n      { id: 'ORD-004', customer: 'Sarah Wilson', amount: 420, status: 'delivered', date: '2025-09-07' },\r\n      { id: 'ORD-005', customer: 'Tom Brown', amount: 150, status: 'processing', date: '2025-09-06' }\r\n    ];\r\n\r\n    return {\r\n      summaryData: {\r\n        totalOrders: 150,\r\n        totalRevenue: 45000,\r\n        totalCustomers: 89,\r\n        averageOrderValue: 300,\r\n        growthRate: 12.5,\r\n        conversionRate: 3.2\r\n      },\r\n      topCustomers: topCustomersData,\r\n      orders: recentOrders,\r\n      chartData: {\r\n        salesOverTime,\r\n        orderStatusDistribution,\r\n        paymentStatus,\r\n        topCustomersByRevenue: topCustomersData\r\n      }\r\n    };\r\n  };\r\n\r\n  // Fetch dashboard data\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // For now, use mock data. In production, replace with actual API calls\r\n      const mockData = generateMockData();\r\n      \r\n      setSummaryData(mockData.summaryData);\r\n      setTopCustomers(mockData.topCustomers);\r\n      setOrders(mockData.orders);\r\n      setChartData(mockData.chartData);\r\n\r\n      console.log('Dashboard data loaded successfully');\r\n    } catch (error) {\r\n      console.error('Dashboard data fetch error:', error);\r\n      setError('Failed to load dashboard data. Please check if the server is running.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, [timeRange]);\r\n\r\n  // Helper functions\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      delivered: 'bg-green-100 text-green-800 border-green-200',\r\n      shipped: 'bg-blue-100 text-blue-800 border-blue-200',\r\n      pending: 'bg-yellow-100 text-yellow-800 border-yellow-200',\r\n      processing: 'bg-purple-100 text-purple-800 border-purple-200',\r\n      cancelled: 'bg-red-100 text-red-800 border-red-200',\r\n      refunded: 'bg-orange-100 text-orange-800 border-orange-200'\r\n    };\r\n    return colors[status] || 'bg-gray-100 text-gray-800 border-gray-200';\r\n  };\r\n\r\n  const getCustomerInitials = (name) => {\r\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\r\n  };\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-loading\">\r\n        <h2>Loading Dashboard...</h2>\r\n        <p>Fetching your data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"dashboard-error\">\r\n        <h2>Dashboard Error</h2>\r\n        <p>{error}</p>\r\n        <button onClick={fetchDashboardData}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Dashboard</h1>\r\n      \r\n      {/* Add the charts component here */}\r\n      <OrderCharts \r\n        orders={orders} \r\n        topCustomers={topCustomers} \r\n        summaryData={summaryData} \r\n      />\r\n      \r\n      {/* Summary Cards */}\r\n      <div className=\"summary-cards\">\r\n        <div className=\"card\">\r\n          <h3>Total Orders</h3>\r\n          <p>{summaryData.totalOrders || 0}</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h3>Total Revenue</h3>\r\n          <p>${summaryData.totalRevenue || 0}</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h3>Total Customers</h3>\r\n          <p>{summaryData.totalCustomers || 0}</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h3>Average Order Value</h3>\r\n          <p>${summaryData.averageOrderValue || 0}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Customers */}\r\n      <div className=\"top-customers\">\r\n        <h2>Top Customers</h2>\r\n        {topCustomers && topCustomers.length > 0 ? (\r\n          <ul>\r\n            {topCustomers.map((customer, index) => (\r\n              <li key={customer.id || index}>\r\n                <span>{customer.name}</span>\r\n                <span>{customer.orders} orders</span>\r\n                <span>${customer.revenue}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No customer data available</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Recent Orders */}\r\n      <div className=\"recent-orders\">\r\n        <h2>Recent Orders</h2>\r\n        {orders && orders.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Date</th>\r\n                <th>Customer</th>\r\n                <th>Amount</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => (\r\n                <tr key={order.id || index}>\r\n                  <td>{order.id}</td>\r\n                  <td>{order.date}</td>\r\n                  <td>{order.customer}</td>\r\n                  <td>${order.amount}</td>\r\n                  <td>{order.status || 'N/A'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No orders available</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Debug Info (remove in production) */}\r\n      <div className=\"debug-info\" style={{ marginTop: '20px', padding: '10px', background: '#f5f5f5' }}>\r\n        <h3>Debug Info:</h3>\r\n        <p>API Base URL: {API_BASE_URL}</p>\r\n        <p>Summary Data: {JSON.stringify(summaryData)}</p>\r\n        <p>Top Customers Count: {topCustomers?.length || 0}</p>\r\n        <p>Orders Count: {orders?.length || 0}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}